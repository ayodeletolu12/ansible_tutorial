---

# This part will run a play against all the host irrespective of the group the hosts belong
- hosts: all
  become: true
  pre_tasks:


  - name: install updates (CentOS)
    tags: always
    dnf:
      update_cache: yes
      update_only: yes
    when: ansible_distribution == "CentOS"

  - name: install updates (Ubuntu)
    tags: always
    apt: 
      upgrade: dist
      update_cache: yes
    when: ansible_distribution == "Ubuntu"

# This part will run ansible play against or target the group(web_servers) hosts grouped in my inventory
- hosts: web_servers
  become: true
  tasks: 

    # The task will install apache and php on Ubuntu
  - name: install apache and php for Ubuntu Servers
    tags: apache, apache2, ubuntu
    apt:
      name: 
        - apache2
        - libapache2-mod-php
      state: latest	
    when: ansible_distribution == "Ubuntu"

    # This part will install apache and php on CentOS
  - name: install apache and php on CentOS Server
    tags: centos, apache, httpd
    dnf:
      name:
        - httpd
        - php
      state: latest
    when: ansible_distribution == "CentOS"

    # This part will use the ansible copy module to copy files to the webservers
  - name: copy default html file for site 
    tags: apache,apache2,httpd
    copy:
      src: default_site.html
      dest: /var/www/html/index.html
      owner: root
      group: root
      mode: 0644

# This part will target my db_servers grouped in the inventory

- hosts: db_servers
  become: true
  tasks:

  - name: install mariadb on my database server (CentOS)
    tags: db, centos, mariab
    dnf:
      name: mariadb
      state: latest
    when: ansible_distribution == "CentOS"

  - name: install mariadb on my database server (ubuntu)
    tags: ubuntu, mariab, db
    apt: 
      name: mariadb-server
      state: latest
    when: ansible_distribution == "Ubuntu"


# This part will target my file_servers

- hosts: file_servers
  become: true
  tasks:

  - name: install samba package
    tags: samba
    package:
      name: samba
      state: latest

# This part will target my Workstation in the inventory

- hosts: workstations
  become: true
  tasks:
 
    # This play will install the unzip package to unzip zipped files using terminal
  - name: install unzip package
    package:
        name: unzip

    # This play will use the unarchive module of ansible to unzip the terraform zipped package downloaded from the source. 
    # I want Terraform binary to reside in /usr/local/bin directory 
  - name: install terraform using ansible unarchive module to unzip the terraform package
    unarchive:
        src: https://releases.hashicorp.com/terraform/1.0.11/terraform_1.0.11_linux_amd64.zip 
        dest: /usr/local/bin
        remote_src: yes
        mode: 0755
        owner: root
        group: root
